#%RAML 0.8
---
title: bit.ly API
version: v3
baseUri: https://api-ssl.bitly.com/{version}/
securitySchemes:
  - oauth_2_0:
      description: |
        OAuth 2.0 is a simple and secure authentication mechanism. It allows applications
        to acquire an access token for bitly via a quick redirect to the bitly site. Once
        an application has an access token, it can access a user's link metrics, and
        shorten links using that user's bitly account.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
      settings:
        authorizationUri: https://bitly.com/oauth/authorize
        accessTokenUri: https://api-ssl.bitly.com/oauth/access_token
        authorizationGrants: [ code, token ]
securedBy: [ oauth_2_0 ]
mediaType: application/json
resourceTypes:
  - base:
      get:
        responses:
          200:
            description: Successful request.
          403:
            description: Rate limit exceeded.
          404:
            description: |
              Not Found. The server has not found anything matching the Request-URI.
          429:
            description: Your application is sending too many simultaneous requests.
          500:
            description: Any other error.
          503:
            description: Unknown error.
/highvalue:
  type: base
  get:
    description: |
      Returns a specified number of "high-value" bitly links that are popular
      across bitly at this particular moment.
    queryParameters:
      limit:
        description: The maximum number of high-value links to return.
        type: integer
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data": {
                  "params": {
                    "lang": "en",
                    "limit": 2
                  },
                  "values": [
                    "http://bit.ly/Shd5nT",
                    "http://bit.ly/VJqu9q"
                  ]
                },
                "status_code": 200,
                "status_txt": "OK"
              }
/search:
  type: base
  get:
    description: |
      Search links receiving clicks across bitly by content, language, location,
      and more.
    queryParameters:
      limit:
        description: The maximum number of high-value links to return.
        type: integer
      offset:
        description: Which result to start with
        type: integer
        default: 0
      query:
        description: String to query for.
        type: string
      lang:
        description: Favor results in this language (two letter ISO code).
        type: string
        maxLength: 2
      cities:
        description: |
          Show links active in this city (ordered like country-state-city, e.g.
          us-il-chicago).
        type: string
      domain:
        description: Restrict results to this web domain.
        type: string
      fields:
        description: |
          Which fields to return in the response (comma-separated).
          By default, all will be returned.
        enum: [ 'domain', 'initial_epoch', 'h2', 'h3', 'site', 'lastindexed',
          'keywords', 'last_indexed_epoch', 'title', 'initial', 'summaryText',
          'content', 'score', 'summaryTitle', 'type', 'description', 'cities',
          'lang', 'url', 'referrer', 'aggregate_link', 'lastseen', 'page', 'ogtitle'
        ]
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data": {
                  "results": [
                    {
                      "aggregate_link": "http://bit.ly/T21fuJ",
                      "title": "Debt Reckoning: The Fiscal Deadline in Washington - NYTimes.com",
                      "url": "http://www.nytimes.com/interactive/us/politics/debt-reckoning.html"
                    },
                    {
                      "aggregate_link": "http://bit.ly/WhGQTe",
                      "title": "Sunday Coverage of School Shooting Aftermath - NYTimes.com",
                      "url": "http://thelede.blogs.nytimes.com/2012/12/16/sunday-coverage-of-newtown-school-shooting/"
                    }
                  ]
                },
                "status_code": 200,
                "status_txt": "OK"
              }
/realtime:
  /bursting_phrases:
    type: base
    get:
      description: |
        Returns phrases that are receiving an uncharacteristically high volume of
        click traffic, and the individual links (hashes) driving traffic to pages
        containing these phrases.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "current_lag": 4,
                    "phrases": [
                      {
                        "N": 644933,
                        "ghashes": [
                          {
                            "ghash": "1534dqE",
                            "visitors": 214
                          },
                          {
                            "ghash": "123Tzxi",
                            "visitors": 77
                          },
                          {
                            "ghash": "YwtqHA",
                            "visitors": 53
                          },
                          {
                            "ghash": "171mi59",
                            "visitors": 52
                          },
                          {
                            "ghash": "10VIMDX",
                            "visitors": 45
                          }
                        ],
                        "mean": 0.17000000000000001,
                        "phrase": "north korea",
                        "rate": 0.29999999999999999,
                        "std": 0.041785272667362532,
                        "urls": [
                          {
                            "aggregate_url": "http://bit.ly/1534dqE",
                            "visitors": 214
                          },
                          {
                            "aggregate_url": "http://bit.ly/123Tzxi",
                            "visitors": 77
                          },
                          {
                            "aggregate_url": "http://bit.ly/YwtqHA",
                            "visitors": 53
                          },
                          {
                            "aggregate_url": "http://bit.ly/171mi59",
                            "visitors": 52
                          },
                          {
                            "aggregate_url": "http://bit.ly/10VIMDX",
                            "visitors": 45
                          }
                        ]
                      },
                      {
                        "N": 4026,
                        "ghashes": [
                          {
                            "ghash": "123InRj",
                            "visitors": 266
                          },
                          {
                            "ghash": "12VnuGK",
                            "visitors": 180
                          },
                          {
                            "ghash": "10QUZsc",
                            "visitors": 38
                          },
                          {
                            "ghash": "171cUOS",
                            "visitors": 10
                          },
                          {
                            "ghash": "17vqEEC",
                            "visitors": 8
                          }
                        ],
                        "mean": 0.01,
                        "phrase": "jackie robinson",
                        "rate": 0.16,
                        "std": 0.0042133518459201253,
                        "urls": [
                          {
                            "aggregate_url": "http://bit.ly/123InRj",
                            "visitors": 266
                          },
                          {
                            "aggregate_url": "http://bit.ly/12VnuGK",
                            "visitors": 180
                          },
                          {
                            "aggregate_url": "http://bit.ly/10QUZsc",
                            "visitors": 38
                          },
                          {
                            "aggregate_url": "http://bit.ly/171cUOS",
                            "visitors": 10
                          }
                        ]
                      }
                    ],
                    "selectivity": 3,
                    "time": 1365800585
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /hot_phrases:
    type: base
    get:
      description: |
        Returns phrases that are receiving a consistently high volume of click
        traffic, and the individual links (hashes) driving traffic to pages
        containing these phrases.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "current_lag": 4,
                    "phrases": [
                      {
                        "ghashes": [
                          {
                            "ghash": "QSQsPh",
                            "visitors": 998
                          },
                          {
                            "ghash": "ScRWYS",
                            "visitors": 266
                          },
                          {
                            "ghash": "ScHTDa",
                            "visitors": 194
                          },
                          {
                            "ghash": "QSxSab",
                            "visitors": 131
                          },
                          {
                            "ghash": "NW3HC7",
                            "visitors": 101
                          },
                          {
                            "ghash": "P9c0rD",
                            "visitors": 47
                          },
                          {
                            "ghash": "SbjnSG",
                            "visitors": 26
                          },
                          {
                            "ghash": "QghCiw",
                            "visitors": 23
                          },
                          {
                            "ghash": "Rvip6f",
                            "visitors": 22
                          },
                          {
                            "ghash": "Sb02kE",
                            "visitors": 21
                          },
                          {
                            "ghash": "NWxRS6",
                            "visitors": 18
                          },
                          {
                            "ghash": "NbDukJ",
                            "visitors": 17
                          },
                          {
                            "ghash": "OGqPAx",
                            "visitors": 17
                          }
                        ],
                        "phrase": "top gun",
                        "rate": 1.0414969999999999
                      },
                      {
                        "ghashes": [
                          {
                            "ghash": "PyyGlF",
                            "visitors": 914
                          },
                          {
                            "ghash": "SIDJ3h",
                            "visitors": 209
                          },
                          {
                            "ghash": "OQQbkR",
                            "visitors": 35
                          },
                          {
                            "ghash": "NBn40C",
                            "visitors": 29
                          },
                          {
                            "ghash": "SIv7K3",
                            "visitors": 29
                          },
                          {
                            "ghash": "QhQMGI",
                            "visitors": 21
                          }
                        ],
                        "phrase": "iphone 5",
                        "rate": 0.76665669999999997
                      }
                    ],
                    "time": 1345477932.46945
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /clickrate:
    type: base
    get:
      description: |
        Returns the click rate for content containing a specified phrase.
      queryParameters:
        phrase:
          description: The phrase for which you'd like to get the click rate.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "ghash": null,
                    "lag": 4,
                    "phrase": "obama",
                    "rate": 1.123823,
                    "time": 1342623038
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
/link:
  /info:
    type: base
    get:
      description: |
        Returns metadata about a single bitly link.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "canonical_url": "http://blog.bitly.com/post/26449494972/happy-independence-day-america",
                    "category": "text",
                    "content_length": 19582,
                    "content_type": "text/html; charset=UTF-8",
                    "domain": "blog.bitly.com",
                    "favicon_url": "http://bitly.com/s/beta/graphics/vis/bitly-favicon-trans.png",
                    "global_hash": "LNY08h",
                    "html_title": "bitly blog - Happy Independence Day, America!",
                    "http_code": 200,
                    "indexed": 1341355564,
                    "linktags_other": [
                      [
                        "icon",
                        "http://bitly.com/s/beta/graphics/vis/bitly-favicon-trans.png"
                      ],
                      [
                        "alternate",
                        "http://blog.bitly.com/rss"
                      ]
                    ],
                    "metatags_name": [
                      [
                        "color:background",
                        "#666"
                      ],
                      [
                        "color:content background",
                        "#fff"
                      ],
                      [
                        "color:header background",
                        "#fff"
                      ],
                      [
                        "color:title",
                        "#555555"
                      ],
                      [
                        "color:description",
                        "#fff"
                      ],
                      [
                        "color:date",
                        "#666"
                      ],
                      [
                        "color:permalinks",
                        "#4AADF0"
                      ],
                      [
                        "color:post title",
                        "#222"
                      ],
                      [
                        "color:text",
                        "#222"
                      ],
                      [
                        "color:inline link",
                        "#ff9900"
                      ],
                      [
                        "color:quote",
                        "#333"
                      ],
                      [
                        "color:quote source",
                        "#666"
                      ],
                      [
                        "color:link post",
                        "#ff9900"
                      ],
                      [
                        "color:conversation background 1",
                        "#f4f4f4"
                      ],
                      [
                        "color:conversation background 2",
                        "#e8e8e8"
                      ],
                      [
                        "color:conversation border",
                        "#ccc"
                      ],
                      [
                        "color:conversation text",
                        "#000"
                      ],
                      [
                        "color:photo background",
                        "#ccc"
                      ],
                      [
                        "color:video background",
                        "#eee"
                      ],
                      [
                        "viewport",
                        "width=675"
                      ]
                    ],
                    "original_url": "http://blog.bitly.com/post/26449494972/happy-independence-day-america",
                    "robots_allowed": true,
                    "source_domain": "blog.bitly.com",
                    "url": "http://blog.bitly.com/post/26449494972/happy-independence-day-america",
                    "url_fetched": "http://blog.bitly.com/post/26449494972/happy-independence-day-america"
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /content:
    type: base
    get:
      description: |
        Returns the "main article" from the linked page, as determined by the content
        extractor, in either HTML or plain text format.
      queryParameters:
        link:
          description: A bitly link.
          type: string
          required: true
        content_type:
          description: |
            Specifies whether to return the content as html or plain text.
          enum: [ 'html', 'plain_text' ]
          default: html
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "content": "<div class=\"regular\">\r\n  <h2>\r\n<a href=\"http://blog.bitly.com/post/26449494972/ ....",
                    "content_type": "html"
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /category:
    type: base
    get:
      description: |
        Returns the detected categories for a document, in descending order of
        confidence.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "categories": [
                      "Social Media",
                      "Advertising",
                      "Software and Internet",
                      "Technology",
                      "Business"
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /social:
    type: base
    get:
      description: |
        Returns the "social score" for a specified bitly link. Note that the social
        score are highly dependent upon activity (clicks) occurring on the bitly
        link. If there have not been clicks on a bitly link within the last 24
        hours, it is possible a social score for that link does not exist.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "social_scores": {
                      "http://bit.ly/MwSGaQ": "76"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /location:
    type: base
    get:
      description: |
        Returns the significant locations for the bitly link or None if locations
        do not exist. Note that locations are highly dependent upon activity
        (clicks) occurring on the bitly link. If there have not been clicks on a
        bitly link within the last 24 hours, it is possible that location data for
        that link does not exist.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "locations": [
                      "us-ny-new york",
                      "us-ny-brooklyn"
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /language:
    type: base
    get:
      description: |
        Returns the significant languages for the bitly link. Note that languages
        are highly dependent upon activity (clicks) occurring on the bitly link.
        If there have not been clicks on a bitly link within the last 24 hours, it
        is possible that language data for that link does not exist.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "languages": {
                      "http://bit.ly/MwSGaQ": "en"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /lookup:
    type: base
    get:
      description: |
        This is used to query for a bitly link based on a long URL.
      queryParameters:
        url:
          description: One or more long URLs to lookup.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                	"$schema": "http://json-schema.org/draft-03/schema",
                	"type": "object",
                	"properties": {
                		"url": {
                			"description": "An echo back of the url parameter.",
                			"type": "string"
                		},
                		"aggregate_link": {
                			"description": "The corresponding bitly aggregate link (global hash).",
                			"type": "string"
                		}
                	}
                }
              example: |
                {
                  "data": {
                    "link_lookup": [
                      {
                        "aggregate_link": "http://bit.ly/2V6CFi",
                        "url": "http://www.google.com/"
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  # Metrics
  /clicks:
    type: base
    get:
      description: |
        Returns the number of clicks on a single bitly link.
        Note: historical data is stored hourly beyond the most recent 60 minutes.
        If a unit_reference_ts is specified, unit cannot be minute.
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"link_clicks": {
                    		"description": "The number of clicks on the specified bitly link.",
                    		"type": "integer"
                    	},
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"unit_reference_ts": {
                    		"description": "An echo of the specified unit_reference_ts value.",
                    		"type": "timestamp"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "link_clicks": [
                      {
                        "clicks": 1,
                        "dt": 1360299600
                      },
                      {
                        "clicks": 2,
                        "dt": 1360213200
                      },
                      {
                        "clicks": 2,
                        "dt": 1360126800
                      },
                      {
                        "clicks": 3,
                        "dt": 1360040400
                      },
                      {
                        "clicks": 10,
                        "dt": 1359954000
                      }
                    ],
                    "tz_offset": -5,
                    "unit": "day",
                    "unit_reference_ts": 1360351157,
                    "units": 5
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /countries:
    type: base
    get:
      description: |
        Saves a link as a bitmark in a user's history, with optional pre-set metadata.
        (Also returns a short URL for that link.)
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"countries": [
                    		{
                    			"properties" : {
                    				"clicks": {
                    					"description": "The number of clicks referred from this country.",
                    					"type": "integer"
                    				},
                    				"country": {
                    					"description": "The two-letter code of the referring country.",
                    					"type": "string",
                    					"minLength": 2,
                    					"maxLength": 2
                    				}
                    			},
                    			"type": "object"
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "countries": [
                      {
                        "clicks": 517,
                        "country": "US"
                      },
                      {
                        "clicks": 165,
                        "country": "None"
                      },
                      {
                        "clicks": 141,
                        "country": "JP"
                      },
                      {
                        "clicks": 84,
                        "country": "DE"
                      },
                      {
                        "clicks": 84,
                        "country": "GB"
                      }
                    ],
                    "tz_offset": -5,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /encoders:
    type: base
    get:
      description: |
        Returns users who have encoded this link (optionally only those in the
        requesting user's social graph).
        Note: Some users may not be returned from this call depending on link
        privacy settings.
      queryParameters:
        link:
          description: A bitly link.
          type: string
          required: true
        my_network:
          description: True or false - restrict to my network.
          type: string
        limit:
          description: |
            Integer in the range of 1 to 25 that specifies the number of records
            to return.
          type: integer
          default: 10
        expand_user:
          description: True or false - include display names of encoders.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"aggregate_link": {
                    		"description": "The aggregate (global) bitly link for the provided bitly link.",
                    		"type": "string"
                    	},
                    	"entries": {
                    		"description": "A mapping of link, user, and ts (when the link was created).",
                    		"type": "string"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "aggregate_link": "http://bit.ly/900913",
                    "entries": [
                      {
                        "link": "http://bit.ly/a5YvlH",
                        "ts": 1265002617,
                        "user": "mang0"
                      },
                      {
                        "link": "http://bit.ly/97CuIj",
                        "ts": 1265018066,
                        "user": "ogakiyaku"
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /encoders_count:
    type: base
    get:
      description: |
        Returns the number of users who have shortened (encoded) a single bitly link.
      queryParameters:
        link:
          description: A bitly link.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"aggregate_link": {
                    		"description": "The aggregate (global) bitly link for the provided bitly link.",
                    		"type": "string"
                    	},
                    	"count": {
                    		"description": "The number of bitly users who have shortened (encoded) this link.",
                    		"type": "integer"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "aggregate_link": "http://bitly.com/900913",
                    "count": 3490
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /referrers:
    type: base
    get:
      description: |
        Returns metrics about the pages referring click traffic to a single bitly link.
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"referrers": [
                    		{
                    			"properties" : {
                    				"clicks": {
                    					"description": "The number of clicks referred from this URL.",
                    					"type": "integer"
                    				},
                    				"referrer": {
                    					"description": "The URL referring clicks.",
                    					"type": "string"
                    				}
                    			},
                    			"type": "object"
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "referrers": [
                      {
                        "clicks": 1129,
                        "referrer": "direct"
                      },
                      {
                        "clicks": 55,
                        "referrer": "http://news.ycombinator.com/item"
                      },
                      {
                        "clicks": 41,
                        "referrer": "http://twitter.com/"
                      },
                      {
                        "clicks": 25,
                        "referrer": "yxG0tQXMY40="
                      },
                      {
                        "clicks": 24,
                        "referrer": "http://localhost/www/2ii.jp/ii.php"
                      }
                    ],
                    "tz_offset": -5,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /referrers_by_domain:
    type: base
    get:
      description: |
        Returns metrics about the pages referring click traffic to a single bitly
        link, grouped by referring domain.
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"referrers": [
                    		{
                    			"properties" : {
                    				"clicks": {
                    					"description": "The number of clicks referred from this URL.",
                    					"type": "integer"
                    				},
                    				"referrer": {
                    					"description": "The URL referring clicks.",
                    					"type": "string"
                    				}
                    			},
                    			"type": "object"
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "referrers": {
                      "Twitter": [
                        {
                          "clicks": 41,
                          "referrer": "http://twitter.com/"
                        },
                        {
                          "clicks": 4,
                          "referrer": "http://t.co/123"
                        }
                      ],
                      "direct": [
                        {
                          "clicks": 1129,
                          "referrer": "direct"
                        }
                      ],
                      "localhost": [
                        {
                          "clicks": 24,
                          "referrer": "http://localhost/www/2ii.jp/ii.php"
                        }
                      ],
                      "news.ycombinator.com": [
                        {
                          "clicks": 55,
                          "referrer": "http://news.ycombinator.com/item"
                        }
                      ],
                      "yxG0tQXMY40=": [
                        {
                          "clicks": 25,
                          "referrer": "yxG0tQXMY40="
                        }
                      ]
                    },
                    "tz_offset": -5,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /referring_domains:
    type: base
    get:
      description: |
        Returns metrics about the domains referring click traffic to a single bitly link.
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"referring_domains": [
                    		{
                    			"properties" : {
                    				"clicks": {
                    					"description": "The number of clicks referred from this domain.",
                    					"type": "integer"
                    				},
                    				"domain": {
                    					"description": "The domain referring clicks.",
                    					"type": "string"
                    				},
                    				"url": {
                    					"description": "The complete URL of the domain referring clicks.",
                    					"type": "string"
                    				}
                    			},
                    			"type": "object"
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "referring_domains": [
                      {
                        "clicks": 1129,
                        "domain": "direct"
                      },
                      {
                        "clicks": 72,
                        "domain": "twitter.com",
                        "url": "http://twitter.com/"
                      },
                      {
                        "clicks": 56,
                        "domain": "news.ycombinator.com",
                        "url": "http://news.ycombinator.com/"
                      },
                      {
                        "clicks": 26,
                        "domain": "www.facebook.com",
                        "url": "http://www.facebook.com/"
                      }
                    ],
                    "tz_offset": -5,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /shares:
    type: base
    get:
      description: |
        Returns metrics about the pages referring click traffic to a single bitly link.
      queryParameters:
        link:
          description: A bitly link.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                        "shares": [
                            {
                                "description": "The number of shares for the specified bitly link, by the type of share (twitter, email, facebook).",
                                "properties": {
                                    "share_type": {
                                        "type": "string"
                                    },
                                    "shares": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        ],
                        "type": "array",
                        "tz_offset": {
                            "description": "The offset for the specified timezone, in hours.",
                            "type": "integer"
                        },
                        "unit": {
                            "description": "An echo of the specified unit value.",
                            "type": "string"
                        },
                        "units": {
                            "description": "An echo of the specified units value.",
                            "type": "integer"
                        }
                    }
                }
              example: |
                {
                  "data": {
                    "shares": [
                      {
                        "share_type": "tw",
                        "shares": 1
                      }
                    ],
                    "total_shares": 1,
                    "tz_offset": -4,
                    "unit": "day",
                    "unit_reference_ts": null,
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
/expand:
  type: base
  get:
    description: |
      Given a bitly URL or hash (or multiple), returns the target (long) URL.
      Note: either shortUrl or hash must be given as a parameter.
    queryParameters:
      shortUrl:
        description: |
          Refers to one or more bitly links. e.g.: http://bit.ly/1RmnUT or
          http://j.mp/1RmnUT.
        type: string
      hash:
        description: |
          Refers to one or more bitly hashes. e.g.: 2bYgqR or a-custom-name.
        type: string
    responses:
      200:
        body:
          application/json:
            schema: |
              {
              	"$schema": "http://json-schema.org/draft-03/schema",
              	"type": "object",
              	"properties": {
              		"short_url": {
              			"description": "An echo back of the shortUrl request parameter.",
              			"type": "string"
              		},
              		"hash": {
              			"description": "An echo back of the hash request parameter.",
              			"type": "string"
              		},
              		"user_hash": {
              			"description": "The corresponding bitly user identifier.",
              			"type": "string"
              		},
              		"global_hash": {
              			"description": "The corresponding bitly aggregate identifier.",
              			"type": "string"
              		},
              		"error": {
              			"description": "Indicates there was an error retrieving data for a given shortUrl or hash. An example error is 'NOT_FOUND'.",
              			"type": "string"
              		},
              		"long_url": {
              			"description": "The URL that the requested short_url or hash points to.",
              			"type": "string"
              		}
              	}
              }
            example: |
              {
                "data": {
                  "expand": [
                    {
                      "global_hash": "900913",
                      "long_url": "http://google.com/",
                      "short_url": "http://bit.ly/ze6poY",
                      "user_hash": "ze6poY"
                    }
                  ]
                },
                "status_code": 200,
                "status_txt": "OK"
              }
/user:
  /link_edit:
    type: base
    get:
      description: |
        Changes link metadata in a user's history.
        Because link metadata is modified asynchronously, it may take a few moments
        for changes made via this API method to update.
      queryParameters:
        link:
          description: The bitly link to be edited.
          type: string
        edit:
          description: |
            A comma separated string of fields to be edited. ie: to edit the note
            field you also need to pass edit=note.
          type: string
          required: true
        title:
          description: The title of this bitmark.
          type: string
        note:
          description: A description of, or note about, this bitmark.
          type: string
        private:
          description: |
            Boolean true or false indicating privacy setting (defaults to user-level
            setting).
          type: string
        user_ts:
          description: Timestamp as an integer epoch.
          type: integer
        archived:
          description: Boolean true or false indicating whether or not link is to be archived.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"link": {
                            "description": "An echo back of the edited bitly link.",
                            "type": "string"
                        }
                    }
                }
              example: |
                {
                  "data": {
                    "link_edit": {
                      "link": "http://bit.ly/JGVkUk"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_lookup:
    type: base
    get:
      description: |
        This is used to query for a bitly link shortened by the authenticated user
        based on a long URL.
      queryParameters:
        url:
          description: One or more long URLs to lookup.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"url": {
                    		"description": "An echo back of the url parameter.",
                    		"type": "string"
                    	},
                    	"link": {
                    		"description": "The corresponding bitly link (short URL).",
                    		"type": "string"
                    	},
                    	"aggregate_link": {
                    		"description": "The corresponding bitly aggregate link (global hash).",
                    		"type": "string"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "link_lookup": [
                      {
                        "aggregate_link": "http://bit.ly/2V6CFi",
                        "link": "http://bit.ly/zhheQ9",
                        "url": "http://www.google.com/"
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_save:
    type: base
    get:
      description: |
        Saves a link as a bitmark in a user's history, with optional pre-set metadata.
        (Also returns a short URL for that link.)
      queryParameters:
        longUrl:
          description: The URL to be saved as a bitmark.
          type: string
          required: true
        title:
          description: The title of this bitmark.
          type: string
        note:
          description: A description of, or note about, this bitmark.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"link": {
                    		"description": "The bitly short URL for the provided longUrl, specific to this user.",
                    		"type": "string"
                    	},
                    	"aggregate_link": {
                    		"description": "A bitly short URL for the provided longUrl, which can be used to track aggregate stats across all bitly links that point to the same longUrl.",
                    		"type": "string"
                    	},
                    	"new_link": {
                    		"description": "Returns 1 if the authenticated user is saving this link for the first time, 0 if the user has previously saved it.",
                    		"type": "integer"
                    	},
                    	"long_url": {
                    		"description": "An echo back of the longUrl request parameter. This may not always be equal to the URL requested, as some URL normalization may occur (e.g., due to encoding differences, or case differences in the domain). This long_url will always be functionally identical the the request parameter.",
                    		"type": "string"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "link_save": {
                      "aggregate_link": "http://bit.ly/JGVkUl",
                      "link": "http://bit.ly/JGVkUk",
                      "long_url": "http://mergerecords.com/news",
                      "new_link": 1
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  # User Info / History
  /info:
    type: base
    get:
      description: Return or update information about a user.
      queryParameters:
        login:
          description: |
            The bitly login of the user whose info to look up. If not given, the
            authenticated user will be used.
          type: string
        full_name:
          description: |
            Set the users full name value. (only available for the authenticated user.)
          type: string
      responses:
        200:
          body:
            application/json:
              # TODO
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                        "login": {
                            "description": "The specified bitly login or the login of the authenticated user.",
                            "type": "string"
                        },
                        "profile_url": {
                            "description": "URL of user's profile page.",
                            "type": "string"
                        },
                        "profile_image": {
                            "description": "URL of user's profile image.",
                            "type": "string"
                        },
                        "member_since": {
                            "description": "Unix timestamp for the moment the user signed up.",
                            "type": "timestamp"
                        },
                        "full_name": {
                            "description": "The user's full name, if set.",
                            "type": "string",
                            "required": false
                        },
                        "display_name": {
                            "description": "The user's display name, if set.",
                            "type": "string",
                            "required": false
                        },
                        "share_accounts": [
                            {
                                "description": "A list of the share accounts (Twitter or Facebook) linked to the user's account.",
                                "type": "string",
                                "required": false
                            }
                        ],
                        "type": "array",
                        "apiKey": {
                            "description": "The user's bitly API key.",
                            "type": "string"
                        },
                        "is_enterprise": {
                            "description": "0 or 1 to indicate if this account is signed up for bitly enterprise.",
                            "type": "boolean",
                            "default": false
                        },
                        "sub_accounts": [
                            {
                                "description": "List of accounts associated with this account."
                            }
                        ],
                        "type": "array",
                        "required": false,
                        "e2e_domains": [
                            {
                                "description": "List of domains associated with this custom_short_domain."
                            }
                        ],
                        "type": "array",
                        "required": false,
                    	"tracking_url_prefxies": [
                            {
                                "description": "A list of owned 3rd party urls such as Facebook tracked for analytics"
                            }
                        ],
                        "type": "array",
                        "master_account": {
                            "description": "The login of a master account, if this is associated with an enterprise account.",
                            "type": "string",
                            "required": false
                        },
                        "enterprise_permissions": [
                            {
                                "description": "List of enterprise permissions associated with this account."
                            }
                        ],
                        "type": "array",
                        "required": false
                    }
                }
              example: |
                {
                  "data": {
                    "apiKey": "R_f6397a37e765574f2e198dba5bb59522",
                    "custom_short_domain": null,
                    "display_name": null,
                    "full_name": "Bitly API Oauth Demo Account",
                    "is_enterprise": false,
                    "login": "bitlyapioauthdemo",
                    "member_since": 1331567982,
                    "profile_image": "http://bitly.com/u/bitlyapioauthdemo.png",
                    "profile_url": "http://bitly.com/u/bitlyapioauthdemo",
                    "share_accounts": [],
                    "tracking_domains": []
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_history:
    type: base
    get:
      description: |
        Returns entries from a user's link history in reverse chronological order.
        Note: Entries will be sorted by the user_ts field found in the response data.
      queryParameters:
        link:
          description: |
            The bitly link to return metadata for (when specified, overrides all
            other options).
          type: string
        limit:
          description: |
            Integer in the range 1 to 100 default: 50, specifying the max number of
            results to return.
          type: integer
          default: 50
        offset:
          description: |
            Integer specifying the numbered result at which to start (for pagination).
          type: integer
        created_before:
          description: Timestamp as an integer unix epoch.
          type: string
        created_after:
          description: Timestamp as an integer unix epoch.
          type: string
        modified_after:
          description: Timestamp as an integer unix epoch.
          type: string
        expand_client_id:
          description: |
            true or false whether to provide additional information about encoding
            application. default: false.
          type: string
        archived:
          description: |
            On, off or both whether to include or exclude archived history entries.
            (on = return only archived history entries)
          enum: [ 'on', 'off' ]
          default: 'off'
        private:
          description: |
            on, off and both whether to include or exclude private history entries.
            (on = return only private history entries) default: both.
          enum: [ 'on', 'off' ]
        user:
          description: |
            The user for whom to retrieve history entries (if different from
            authenticated user).
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"result_count": {
                    		"description": "The number of returned links in this user's history.",
                    		"type": "integer"
                    	},
                    	"link_history": [
                    		{
                    			"description": "The specified user's links.",
                    			"properties": {
                    				"link": {
                    					"description": "The bitly link specific to this user and this long_url.",
                    					"type": "string"
                    				},
                    				"aggregate_link": {
                    					"description": "The global bitly identifier for this long_url.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The original long URL.",
                    					"type": "string"
                    				},
                    				"archived": {
                    					"description": "A true/false value indicating whether the user has archived this link.",
                    					"type": "boolean"
                    				},
                    				"private": {
                    					"description": "A true/false value indicating whether the user has made this link private.",
                    					"type": "boolean"
                    				},
                    				"created_at": {
                    					"description": "An integer unix epoch indicating when this link was shortened/encoded.",
                    					"type": "timestamp"
                    				},
                    				"user_ts": {
                    					"description": "A user-provided timestamp for when this link was shortened/encoded, used for backfilling data.",
                    					"type": "timestamp"
                    				},
                    				"modified_at": {
                    					"description": "An integer unix epoch indicating when this link's metadata was last edited.",
                    					"type": "timestamp"
                    				},
                    				"title": {
                    					"description": "The title for this link.",
                    					"type": "string"
                    				},
                    				"shares": [
                	    				{
                	    					"description": "A list of share actions (for the authenticated user only)"
                	    				}
                    				],
                    				"type": "array",
                    				"client_id": {
                    					"description": "the oauth client ID of the app that shortened/saved this link on behalf of the user. If expand_client_id is set to false, this will be a string corresponding to the client_id of the encoding oauth application. If expand_client_id is set to true, this will be a mapping containing the following fields:",
                    					"anyOf": [
                    						{
                    							"type": "string"
                    						},
                    						{
                    							"properties": {
                    								"client_id": {
                    									"description": "A string corresponding to the client_id of the encoding oauth application.",
                    									"type": "string"
                    								},
                    								"app_link": {
                    									"description": "The link for the encoding oauth application.",
                    									"type": "string"
                    								},
                    								"app_name": {
                    									"description": "The name of the encoding oauth application.",
                    									"type": "string"
                    								},
                    								"app_description": {
                    									"description": "A description of the encoding oauth application.",
                    									"type": "string"
                    								}
                    							}
                    						}
                    					]
                    				}
                    			},
                                "type": "object"
                    		}
                    	]
                    }
                }
              example: |
                {
                  "data": {
                    "link_history": [
                      {
                        "aggregate_link": "http://4sq.com/bGUucR",
                        "archived": false,
                        "client_id": "a5a2e024b030d6a594be866c7be57b5e2dff9972",
                        "created_at": 1331669360,
                        "link": "http://4sq.com/xnRb5V",
                        "long_url": "http://foursquare.com/",
                        "modified_at": 1331669360,
                        "private": false,
                        "title": null,
                        "user_ts": 1331669360
                      },
                      {
                        "aggregate_link": "http://nyti.ms/16tOHV",
                        "archived": false,
                        "client_id": "a5a2e024b030d6a594be866c7be57b5e2dff9972",
                        "created_at": 1331669349,
                        "link": "http://nyti.ms/xr5jgq",
                        "long_url": "http://nytimes.com/",
                        "modified_at": 1331669350,
                        "private": false,
                        "title": "The New York Times - Breaking News, World News & Multimedia",
                        "user_ts": 1331669349
                      },
                      {
                        "aggregate_link": "http://bit.ly/2V6CFi",
                        "archived": false,
                        "client_id": "a5a2e024b030d6a594be866c7be57b5e2dff9972",
                        "created_at": 1331663117,
                        "link": "http://bit.ly/zhheQ9",
                        "long_url": "http://www.google.com/",
                        "modified_at": 1331663117,
                        "private": false,
                        "title": "Google",
                        "user_ts": 1331663117
                      }
                    ],
                    "result_count": 3
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /network_history:
    type: base
    get:
      description: |
        Returns entries from a user's network history in reverse chronogical order.
        (A user's network history includes publicly saved links from Twitter and
        Facebook connections.)
      queryParameters:
        offset:
          description: Integer that specifies the first record to return.
          type: integer
        expand_client_id:
          description: |
            True or false whether to provide additional information about encoding
            application.
          type: string
          default: false
          required: true
        limit:
          description: |
            Integer in the range of 1 to 100 that specifies the number of records
            to return (default: 20).
          type: integer
          default: 20
        expand_user:
          description: |
            True or false - include extra user info in response (login, avatar_url,
            display_name, profile_url, full_name
          type: string
          default: false
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"total": {
                    		"description": "The total number of network history results returned.",
                    		"type": "integer"
                    	},
                    	"limit": {
                    		"description": "An echo back of the limit parameter.",
                    		"type": "integer"
                    	},
                    	"offset": {
                    		"description": "An echo back of the offset parameter.",
                    		"type": "integer"
                    	},
                    	"entries": [
                    		{
                    			"description": "The returned network history links",
                    			"properties": {
                    				"global_hash": {
                    					"description": "The global (aggregate) identifier of this link.",
                    					"type": "string"
                    				},
                    				"saves": [
                    					{
                    						"description": "Information about each time this link has been publicly saved by bitly users followed by the authenticated user.",
                    						"properties": {
                    							"link": {
                    								"description": "The bitly link specific to this user and this long_url.",
                    								"type": "string"
                    							},
                    							"aggregate_link": {
                    								"description": "The global bitly identifier for this long_url.",
                    								"type": "string"
                    							},
                    							"long_url": {
                    								"description": "The original long URL.",
                    								"type": "string"
                    							},
                    							"user": {
                    								"description": "The bitly user who saved this link.",
                    								"type": "string"
                    							},
                    							"archived": {
                			    					"description": "A true/false value indicating whether the user has archived this link.",
                			    					"type": "boolean"
                			    				},
                			    				"private": {
                			    					"description": "A true/false value indicating whether the user has made this link private.",
                			    					"type": "boolean"
                			    				},
                			    				"created_at": {
                			    					"description": "An integer unix epoch indicating when this link was shortened/encoded.",
                			    					"type": "timestamp"
                			    				},
                			    				"user_ts": {
                			    					"description": "A user-provided timestamp for when this link was shortened/encoded, used for backfilling data.",
                			    					"type": "timestamp"
                			    				},
                			    				"modified_at": {
                			    					"description": "An integer unix epoch indicating when this link's metadata was last edited.",
                			    					"type": "timestamp"
                			    				},
                			    				"title": {
                			    					"description": "The title for this link.",
                			    					"type": "string"
                			    				},
                			    				"client_id": {
                			    					"description": "the oauth client ID of the app that shortened/saved this link on behalf of the user. If expand_client_id is set to false, this will be a string corresponding to the client_id of the encoding oauth application. If expand_client_id is set to true, this will be a mapping containing the following fields:",
                			    					"oneOf": [
                			    						{
                			    							"type": "string"
                			    						},
                			    						{
                			    							"properties": {
                			    								"client_id": {
                			    									"description": "A string corresponding to the client_id of the encoding oauth application.",
                			    									"type": "string"
                			    								},
                			    								"app_link": {
                			    									"description": "The link for the encoding oauth application.",
                			    									"type": "string"
                			    								},
                			    								"app_name": {
                			    									"description": "The name of the encoding oauth application.",
                			    									"type": "string"
                			    								},
                			    								"app_description": {
                			    									"description": "A description of the encoding oauth application.",
                			    									"type": "string"
                			    								}
                			    							},
                			    							"type": "object"
                			    						}
                			    					]
                			    				}
                    						}
                    					}
                    				],
                    				"type": "array"
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "entries": [
                      {
                        "global_hash": "789",
                        "saves": [
                          {
                            "aggregate_link": "http://bit.ly/789",
                            "archived": false,
                            "client_id": "a5a2e024b030d6a594be866c7be57b5e2dff9972",
                            "created_at": 1337892044,
                            "global_hash": "789",
                            "link": "http://bit.ly/123",
                            "long_url": "http://fakewebsite.com/something",
                            "modified_at": 1337892044,
                            "private": false,
                            "title": "This is a page about exciting things!",
                            "user": "somebitlyuser",
                            "user_ts": 1337892044
                          }
                        ]
                      },
                      {
                        "global_hash": "234",
                        "saves": [
                          {
                            "aggregate_link": "http://bit.ly/234",
                            "archived": false,
                            "client_id": "a5a2e024b030d6a594be866c7be57b5e2dff9972",
                            "created_at": 1337892044,
                            "global_hash": "234",
                            "link": "http://bit.ly/567",
                            "long_url": "http://something.com/blahblahblah",
                            "modified_at": 1337892044,
                            "private": false,
                            "title": "This is an article about something!",
                            "user": "anotherbitlyuser",
                            "user_ts": 1337892044
                          }
                        ]
                      }
                    ],
                    "limit": 20,
                    "offset": 0,
                    "total": 2
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /tracking_domain_list:
    type: base
    get:
      description: Returns a list of tracking domains a user has configured.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tracking_domains": [
                    		{
                    			"type": "string"
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "tracking_domains": [
                      "usa.gov"
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  # Metrics
  /clicks:
    type: base
    get:
      description: |
        Returns the aggregate number of clicks on all of the authenticated user's
        bitly links.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"days": {
                    		"description": "The number of days for which data is provided (ONLY returned if unit is not specified).",
                    		"type": "integer"
                    	},
                        "user_clicks": [
                            {
                                "properties": {
                                    "dt": {
                                        "description": "A unix timestamp representing the beginning of this unit.",
                                        "type": "timestamp"
                                    },
                                    "day_start": {
                                        "description": "A unix timestamp representing the beginning of the specified day (ONLY returned if unit is not specified).",
                                        "type": "timestamp"
                                    },
                                    "clicks": {
                                        "description": "The number of clicks on this user's links in the specified timeframe.",
                                        "type": "integer"
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "clicks": [
                      {
                        "clicks": 3,
                        "day_start": 1331784000
                      },
                      {
                        "clicks": 129,
                        "day_start": 1331697600
                      },
                      {
                        "clicks": 53,
                        "day_start": 1331611200
                      },
                      {
                        "clicks": 151,
                        "day_start": 1331524800
                      },
                      {
                        "clicks": 2,
                        "day_start": 1331438400
                      },
                      {
                        "clicks": 5,
                        "day_start": 1331352000
                      },
                      {
                        "clicks": 45,
                        "day_start": 1331265600
                      }
                    ],
                    "days": 7,
                    "total_clicks": 388
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /countries:
    type: base
    get:
      description: |
        Returns the number of clicks on a single bitly link.
        Note: historical data is stored hourly beyond the most recent 60 minutes.
        If a unit_reference_ts is specified, unit cannot be minute.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"days": {
                    		"description": "The number of days for which data is provided (ONLY returned if unit is not specified).",
                    		"type": "integer"
                    	},
                        "countries": [
                            {
                            	"description": "A list of countries referring traffic to this user's links.",
                                "properties": {
                                    "clicks": {
                                        "description": "The number of clicks referred from this country.",
                                        "type": "integer"
                                    },
                                    "country": {
                                        "description": "The two-letter code of the referring country.",
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "countries": [
                      [
                        {
                          "clicks": 3,
                          "country": "US"
                        }
                      ],
                      [
                        {
                          "clicks": 96,
                          "country": "US"
                        },
                        {
                          "clicks": 19,
                          "country": "None"
                        },
                        {
                          "clicks": 4,
                          "country": "CA"
                        },
                        {
                          "clicks": 3,
                          "country": "GB"
                        },
                        {
                          "clicks": 2,
                          "country": "NZ"
                        },
                        {
                          "clicks": 2,
                          "country": "IE"
                        },
                        {
                          "clicks": 1,
                          "country": "DE"
                        },
                        {
                          "clicks": 1,
                          "country": "HK"
                        },
                        {
                          "clicks": 1,
                          "country": "AU"
                        }
                      ],
                      [
                        {
                          "clicks": 41,
                          "country": "US"
                        },
                        {
                          "clicks": 8,
                          "country": "None"
                        },
                        {
                          "clicks": 3,
                          "country": "PL"
                        },
                        {
                          "clicks": 1,
                          "country": "GB"
                        }
                      ],
                      [
                        {
                          "clicks": 113,
                          "country": "US"
                        },
                        {
                          "clicks": 21,
                          "country": "None"
                        },
                        {
                          "clicks": 4,
                          "country": "CA"
                        },
                        {
                          "clicks": 4,
                          "country": "GB"
                        },
                        {
                          "clicks": 3,
                          "country": "NO"
                        },
                        {
                          "clicks": 1,
                          "country": "CL"
                        },
                        {
                          "clicks": 1,
                          "country": "AR"
                        },
                        {
                          "clicks": 1,
                          "country": "SE"
                        },
                        {
                          "clicks": 1,
                          "country": "IN"
                        },
                        {
                          "clicks": 1,
                          "country": "IE"
                        },
                        {
                          "clicks": 1,
                          "country": "PL"
                        }
                      ],
                      [
                        {
                          "clicks": 1,
                          "country": "US"
                        },
                        {
                          "clicks": 1,
                          "country": "TH"
                        }
                      ],
                      [
                        {
                          "clicks": 4,
                          "country": "US"
                        },
                        {
                          "clicks": 1,
                          "country": "None"
                        }
                      ],
                      [
                        {
                          "clicks": 40,
                          "country": "US"
                        },
                        {
                          "clicks": 2,
                          "country": "None"
                        },
                        {
                          "clicks": 2,
                          "country": "CA"
                        },
                        {
                          "clicks": 1,
                          "country": "PL"
                        }
                      ]
                    ],
                    "days": 7
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /popular_links:
    type: base
    get:
      description: |
        Returns the authenticated user's most-clicked bitly links (ordered by number
        of clicks) in a given time period.
        Note: This replaces the realtime_links endpoint.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                        "popular_links": [
                            {
                            	"description": "The links that have received click traffic in the specified timeframe.",
                                "properties": {
                                    "link": {
                                        "description": "A bitly link.",
                                        "type": "string"
                                    },
                                    "clicks": {
                                        "description": "The number of clicks on that bitly link in the specified timeframe.",
                                        "type": "integer"
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "popular_links": [
                      {
                        "clicks": 6150,
                        "link": "http://bit.ly/123456"
                      },
                      {
                        "clicks": 3647,
                        "link": "http://bit.ly/234567"
                      },
                      {
                        "clicks": 1814,
                        "link": "http://bit.ly/abc123"
                      },
                      {
                        "clicks": 1813,
                        "link": "http://bit.ly/bcd234"
                      }
                    ],
                    "tz_offset": -4,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /referrers:
    type: base
    get:
      description: |
        Returns aggregate metrics about the pages referring click traffic to all
        of the authenticated user's bitly links.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"days": {
                    		"description": "The number of days for which data is provided (ONLY returned if unit is not specified).",
                    		"type": "integer"
                    	},
                        "referrers": [
                            {
                            	"description": "A list of URLs referring traffic to this user's links.",
                                "properties": {
                                    "clicks": {
                                        "description": "The number of clicks referred from this URL.",
                                        "type": "integer"
                                    },
                                    "referrer": {
                                        "description": "The URL referring clicks.",
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "days": 7,
                    "referrers": [
                      [
                        {
                          "clicks": 5,
                          "referrer": "direct"
                        },
                        {
                          "clicks": 3,
                          "referrer": "https://twitter.com/"
                        }
                      ],
                      [
                        {
                          "clicks": 24,
                          "referrer": "direct"
                        },
                        {
                          "clicks": 7,
                          "referrer": "https://twitter.com/"
                        },
                        {
                          "clicks": 1,
                          "referrer": "http://www.linkedin.com/home"
                        },
                        {
                          "clicks": 1,
                          "referrer": "http://mobile.twitter.com/"
                        }
                      ],
                      [
                        {
                          "clicks": 11,
                          "referrer": "direct"
                        },
                        {
                          "clicks": 1,
                          "referrer": "https://twitter.com/"
                        },
                        {
                          "clicks": 1,
                          "referrer": "http://www.linkedin.com/home"
                        }
                      ],
                      [
                        {
                          "clicks": 27,
                          "referrer": "direct"
                        },
                        {
                          "clicks": 13,
                          "referrer": "https://twitter.com/"
                        },
                        {
                          "clicks": 2,
                          "referrer": "http://hootsuite.com/dashboard"
                        }
                      ],
                      [
                        {
                          "clicks": 1,
                          "referrer": "http://blog.bitlyenterprise.com/"
                        }
                      ],
                      [
                        {
                          "clicks": 2,
                          "referrer": "https://twitter.com/"
                        },
                        {
                          "clicks": 1,
                          "referrer": "direct"
                        }
                      ],
                      [
                        {
                          "clicks": 6,
                          "referrer": "direct"
                        },
                        {
                          "clicks": 2,
                          "referrer": "https://twitter.com/"
                        },
                        {
                          "clicks": 1,
                          "referrer": "http://www.facebook.com/home.php"
                        }
                      ]
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /referring_domains:
    type: base
    get:
      description: |
        Returns the number of clicks on a single bitly link.
        Note: historical data is stored hourly beyond the most recent 60 minutes.
        If a unit_reference_ts is specified, unit cannot be minute.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"days": {
                    		"description": "The number of days for which data is provided (ONLY returned if unit is not specified).",
                    		"type": "integer"
                    	},
                        "referring_domains": [
                            {
                            	"description": "A list of domains referring traffic to this user's links.",
                                "properties": {
                                    "clicks": {
                                        "description": "The number of clicks referred from this domain.",
                                        "type": "integer"
                                    },
                                    "domain": {
                                        "description": "the domain referring clicks.",
                                        "type": "string"
                                    },
                                    "url": {
                                    	"description": "The complete URL of the domain referring clicks.",
                                    	"type": "string"
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "days": 7,
                    "referring_domains": [
                      {
                        "dt": 1333339200,
                        "values": [
                          {
                            "clicks": 1,
                            "domain": "direct"
                          }
                        ]
                      },
                      {
                        "dt": 1333252800,
                        "values": [
                          {
                            "clicks": 3,
                            "domain": "direct"
                          }
                        ]
                      },
                      {
                        "dt": 1333166400,
                        "values": [
                          {
                            "clicks": 7,
                            "domain": "t.co",
                            "url": "http://t.co/"
                          },
                          {
                            "clicks": 4,
                            "domain": "direct"
                          }
                        ]
                      },
                      {
                        "dt": 1333080000,
                        "values": [
                          {
                            "clicks": 36,
                            "domain": "t.co",
                            "url": "http://t.co/"
                          },
                          {
                            "clicks": 6,
                            "domain": "direct"
                          },
                          {
                            "clicks": 5,
                            "domain": "twitter.com",
                            "url": "http://twitter.com/"
                          },
                          {
                            "clicks": 1,
                            "domain": "hootsuite.com",
                            "url": "http://hootsuite.com/"
                          }
                        ]
                      },
                      {
                        "dt": 1332993600,
                        "values": [
                          {
                            "clicks": 96,
                            "domain": "t.co",
                            "url": "http://t.co/"
                          },
                          {
                            "clicks": 21,
                            "domain": "direct"
                          },
                          {
                            "clicks": 15,
                            "domain": "twitter.com",
                            "url": "http://twitter.com/"
                          },
                          {
                            "clicks": 3,
                            "domain": "hootsuite.com",
                            "url": "http://hootsuite.com/"
                          },
                          {
                            "clicks": 1,
                            "domain": "www.linkedin.com",
                            "url": "http://www.linkedin.com/"
                          }
                        ]
                      },
                      {
                        "dt": 1332907200,
                        "values": [
                          {
                            "clicks": 49,
                            "domain": "t.co",
                            "url": "http://t.co/"
                          },
                          {
                            "clicks": 33,
                            "domain": "direct"
                          },
                          {
                            "clicks": 4,
                            "domain": "twitter.com",
                            "url": "http://twitter.com/"
                          },
                          {
                            "clicks": 2,
                            "domain": "mail.verizon.com",
                            "url": "http://mail.verizon.com/"
                          },
                          {
                            "clicks": 2,
                            "domain": "hootsuite.com",
                            "url": "http://hootsuite.com/"
                          }
                        ]
                      },
                      {
                        "dt": 1332820800,
                        "values": [
                          {
                            "clicks": 16,
                            "domain": "t.co",
                            "url": "http://t.co/"
                          },
                          {
                            "clicks": 16,
                            "domain": "direct"
                          },
                          {
                            "clicks": 1,
                            "domain": "twitter.com",
                            "url": "http://twitter.com/"
                          },
                          {
                            "clicks": 1,
                            "domain": "www.google.com",
                            "url": "http://www.google.com/"
                          }
                        ]
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /share_counts:
    type: base
    get:
      description: |
        Returns the number of shares by the authenticated user in a given time period.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                        "share_counts": [
                            {
                            	"description": "The number of shares from this user's account. If rollup=false, returns timeseries data per unit.",
                                "properties": {
                                    "dt": {
                                        "description": "Timestamp corresponding to the specified unit.",
                                        "type": "timestamp"
                                    },
                                    "shares": {
                                        "description": "The number of shares in that timeframe.",
                                        "type": "integer"
                                    }
                                }
                            }
                        ],
                        "type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "share_metrics": 17,
                    "tz_offset": -4,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  # I have no idea why but parser fails to validate whole doc if this line isn't commented
  #/share_counts_by_share_type:
    # type: base
    # get:
    #   description: |
    #     Returns the number of clicks on a single bitly link.
    #     Note: historical data is stored hourly beyond the most recent 60 minutes.
    #     If a unit_reference_ts is specified, unit cannot be minute.
    #   queryParameters:
    #     unit:
    #       description: |
    #         minute, hour, day, week or month, default: day
    #         Note: when unit is minute the maximum value for units is 60.
    #       enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
    #       default: 'day'
    #     units:
    #       description: |
    #         An integer representing the time units to query data for. Pass -1 to
    #         return all units of time.
    #       type: integer
    #     timezone:
    #       description: |
    #         An integer hour offset from UTC (-14 to 14), or a timezone string
    #         default: America/New_York.
    #       type: integer
    #       default: -4
    #     rollup:
    #       description: |
    #         Return data for multiple units rolled up to a single result instead of
    #         a separate value for each period of time.
    #       type: string
    #     limit:
    #       description: 1 to 1000
    #       type: integer
    #       default: 100
    #     unit_reference_ts:
    #       description: |
    #         An epoch timestamp, indicating the most recent time for which to pull
    #         metrics, default: now.
    #         The value of unit_reference_ts rounds to the nearest unit.
    #       type: string
    #   responses:
    #     200:
    #       body:
    #         application/json:
    #           schema: |
    #             {
    #                 "$schema": "http://json-schema.org/draft-03/schema",
    #                 "type": "object",
    #                 "properties": {
    #                 	"tz_offset": {
    #                 		"description": "The offset for the specified timezone, in hours.",
    #                 		"type": "integer"
    #                 	},
    #                 	"unit": {
    #                 		"description": "An echo of the specified unit value.",
    #                 		"type": "string"
    #                 	},
    #                 	"units": {
    #                 		"description": "An echo of the specified units value.",
    #                 		"type": "integer"
    #                 	},
    #                     "share_counts_by_share_type": [
    #                         {
    #                         	"description": "The number of shares from this user's account for each share_type.",
    #                             "properties": {
    #                                 "dt": {
    #                                     "description": "Timestamp corresponding to the specified unit. Included in timeseries response only if rollup=false.",
    #                                     "type": "timestamp"
    #                                 },
    #                                 "share_type": {
    #                                     "description": "The type of share (twitter, email, facebook).",
    #                                     "type": "string"
    #                                 },
    #                                 "shares": {
    #                                     "description": "The number of shares of the specified type in that timeframe.",
    #                                     "type": "integer"
    #                                 }
    #                             }
    #                         }
    #                     ],
    #                     "type": "array"
    #                 }
    #             }
    #           example: |
    #             {
    #               "data": {
    #                 "share_counts_by_share_type": [
    #                   {
    #                     "share_type": "twitter",
    #                     "shares": 10
    #                   },
    #                   {
    #                     "share_type": "email",
    #                     "shares": 7
    #                   }
    #                 ],
    #                 "tz_offset": -4,
    #                 "unit": "day",
    #                 "units": -1
    #               },
    #               "status_code": 200,
    #               "status_txt": "OK"
    #             }
  /shorten_counts:
    type: base
    get:
      description: |
        Returns the number of links shortened (encoded) in a given time period by
        the authenticated user.
      queryParameters:
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"user_shorten_counts": {
                    		"description": "The number of shortens made by the specified user in the specified time.",
                    		"type": "integer"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "tz_offset": -4,
                    "unit": "day",
                    "units": -1,
                    "user_shorten_counts": 1254
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  #Domains
  /tracking_domain_clicks:
    type: base
    get:
      description: |
        Returns the number of clicks on bitly links pointing to the specified
        tracking domain that have occured in a given time period.
        Users can register a tracking domain from their bitly settings page.
      queryParameters:
        domain:
          description: |
            A tracking domain as returned from /v3/user/tracking_domain_list.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"tracking_domain_clicks": {
                    		"description": "The number of the number of clicks on bitly links pointing to the specified tracking domain in the specified time.",
                    		"type": "integer"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "tracking_domain_clicks": 206,
                    "tz_offset": -4,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /tracking_domain_shorten_counts:
    type: base
    get:
      description: |
        Returns the number of links, pointing to a specified tracking domain, shortened
        (encoded) in a given time period by all bitly users.
        Users can register a tracking domain from their bitly settings page.
      queryParameters:
        domain:
          description: |
            A tracking domain as returned from /v3/user/tracking_domain_list.
          type: string
        unit:
          description: |
            minute, hour, day, week or month, default: day
            Note: when unit is minute the maximum value for units is 60.
          enum: [ 'minute', 'hour', 'day', 'week', 'month' ]
          default: 'day'
        units:
          description: |
            An integer representing the time units to query data for. Pass -1 to
            return all units of time.
          type: integer
        timezone:
          description: |
            An integer hour offset from UTC (-14 to 14), or a timezone string
            default: America/New_York.
          type: integer
          default: -4
        rollup:
          description: |
            Return data for multiple units rolled up to a single result instead of
            a separate value for each period of time.
          type: string
        limit:
          description: 1 to 1000
          type: integer
          default: 100
        unit_reference_ts:
          description: |
            An epoch timestamp, indicating the most recent time for which to pull
            metrics, default: now.
            The value of unit_reference_ts rounds to the nearest unit.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"tz_offset": {
                    		"description": "The offset for the specified timezone, in hours.",
                    		"type": "integer"
                    	},
                    	"unit": {
                    		"description": "An echo of the specified unit value.",
                    		"type": "string"
                    	},
                    	"units": {
                    		"description": "An echo of the specified units value.",
                    		"type": "integer"
                    	},
                    	"tracking_domain_shorten_counts": {
                    		"description": "the number of links to the specified tracking domain shortened (encoded) by all bitly users in the specified time.",
                    		"type": "integer"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "tracking_domain_shorten_counts": 88,
                    "tz_offset": -4,
                    "unit": "day",
                    "units": -1
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
/info:
  type: base
  get:
    description: |
      This is used to return the page title for a given bitly link.
    queryParameters:
      hash:
        description: |
          Refers to one or more bitly hashes. e.g.: 2bYgqR or a-custom-name.
        type: string
        required: true
      shortUrl:
        description: |
          Refers to one or more bitly links. e.g.: http://bit.ly/1RmnUT or
          http://j.mp/1RmnUT.
        type: string
      expand_user:
        description: Include extra user info in response.
        type: string
        required: true
    responses:
      200:
        body:
          application/json:
            schema: |
              {
              	"$schema": "http://json-schema.org/draft-03/schema",
              	"type": "object",
              	"properties": {
              		"short_url": {
              			"description": "An echo back of the shortUrl request parameter.",
              			"type": "string"
              		},
              		"hash": {
              			"description": "An echo back of the hash request parameter.",
              			"type": "string"
              		},
              		"user_hash": {
              			"description": "The corresponding bitly user identifier.",
              			"type": "string"
              		},
              		"global_hash": {
              			"description": "The corresponding bitly aggregate identifier.",
              			"type": "string"
              		},
              		"error": {
              			"description": "indicates there was an error retrieving data for a given shortUrl or hash. An example error is 'NOT_FOUND'.",
              			"type": "string"
              		},
              		"title": {
              			"description": "The HTML page title for the destination page (when available).",
              			"type": "string"
              		},
              		"created_by": {
              			"description": "The bitly username that originally shortened this link, if the link is public. Otherwise, null.",
              			"type": "string"
              		},
              		"created_at": {
              			"description": "The epoch timestamp when this bitly link was created.",
              			"type": "timestamp"
              		}
              	}
              }
            example: |
              {
                "data": {
                  "info": [
                    {
                      "created_at": 1212926400,
                      "created_by": null,
                      "global_hash": "1RmnUT",
                      "short_url": "http://bit.ly/1RmnUT",
                      "title": "Google",
                      "user_hash": "1RmnUT"
                    }
                  ]
                },
                "status_code": 200,
                "status_txt": "OK"
              }
/shorten:
  type: base
  get:
    description: Given a long URL, returns a bitly short URL.
    queryParameters:
      longUrl:
        description: |
          A long URL to be shortened (example: http://betaworks.com/).
          Long URLs should be URL-encoded. You can not include a longUrl in the
          request that has &, ?, or other reserved parameters without first
          encoding it.
          Long URLs should not contain spaces: any longUrl with spaces will be
          rejected. All spaces should be either percent encoded %20 or plus
          encoded +. Note that tabs, newlines and trailing spaces are all
          indications of errors. Please remember to strip leading and trailing
          whitespace from any user input before shortening.
          Long URLs must have a slash between the domain and the path component.
          For example, http://example.com?query=parameter is invalid, and instead
          should be formatted as http://example.com/?query=parameter.
        type: string
        required: true
      domain:
        description: |
          Refers to a preferred domain; either bit.ly, j.mp, or bitly.com, for
          users who do NOT have a custom short domain set up with bitly. This
          affects the output value of url. The default for this parameter is the
          short domain selected by each user in his/her bitly account settings.
          Passing a specific domain via this parameter will override the default
          settings for users who do NOT have a custom short domain set up with
          bitly. For users who have implemented a custom short domain, bitly
          will always return short links according to the user's account-level
          preference.
          The default value for the domain parameter is selected by each user from
          within his/her bitly account settings at http://bitly.com/a/account.
        enum: [ 'bit.ly', 'j.mp', 'bitly.com' ]
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "type": "object",
                  "properties": {
                      "new_hash": {
                          "description": "Designates if this is the first time this long_url was shortened by this user. The return value will equal 1 the first time a long_url is shortened. It will also then be added to the user  history.",
                          "type": "string"
                      },
                      "url": {
                          "description": "The actual link that should be used, and is a unique value for the given bitly account.",
                          "type": "string"
                      },
                      "hash": {
                          "description": "A bitly identifier for long_url which is unique to the given account.",
                          "type": "string"
                      },
                      "global_hash": {
                          "description": "A bitly identifier for long_url which can be used to track aggregate stats across all bitly links that point to the same long_url.",
                          "type": "string"
                      },
                      "long_url": {
                          "description": "an echo back of the longUrl request parameter. This may not always be equal to the URL requested, as some URL normalization may occur (e.g., due to encoding differences, or case differences in the domain). This long_url will always be functionally identical the the request parameter. ",
                          "type": "string"
                      }
                  }
              }
            example: |
              {
                "data": {
                  "global_hash": "900913",
                  "hash": "ze6poY",
                  "long_url": "http://google.com/",
                  "new_hash": 0,
                  "url": "http://bit.ly/ze6poY"
                },
                "status_code": 200,
                "status_txt": "OK"
              }
/bundle:
  /archive:
    type: base
    get:
      description: |
        Archive a bundle for the authenticated user. Only a bundle's owner is
        allowed to archive a bundle.
      queryParameters:
        bundle_link:
          description: The URL corresponding to the bundle to be archived.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": "OK",
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /bundles_by_user:
    type: base
    get:
      description: |
        Archive a bundle for the authenticated user. Only a bundle's owner is
        allowed to archive a bundle.
      queryParameters:
        user:
          description: The user to get a list of bundles for.
          type: string
          required: true
        expand_user:
          description: Include extra user info in response.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	}
                    }
                }
              example: |
                {
                  "data": {
                    "bundles": [
                      {
                        "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                        "bundle_owner": "bitlyapioauthdemo",
                        "created_ts": 1332175561,
                        "description": "Kittehs FTW",
                        "last_modified_ts": 1332185530,
                        "private": false,
                        "title": ""
                      },
                      {
                        "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/2",
                        "bundle_owner": "bitlyapioauthdemo",
                        "created_ts": 1332185626,
                        "description": "",
                        "last_modified_ts": 1332185626,
                        "private": false,
                        "title": ""
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /clone:
    type: base
    get:
      description: Clone a bundle for the authenticated user.
      queryParameters:
        bundle_link:
          description: The URL of the bundle to clone.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/3",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332185633,
                      "description": "",
                      "last_modified_ts": 1332185633,
                      "links": [],
                      "private": false,
                      "title": ""
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /collaborator_add:
    type: base
    get:
      description: Add a collaborator to a bundle.
      queryParameters:
        bundle_link:
          description: The URL of the bundle to add.
          type: string
        collaborator:
          description: Bitly login or email address of the collaborator to add.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /collaborator_remove:
    type: base
    get:
      description: Remove a collaborator from a bundle.
      queryParameters:
        bundle_link:
          description: The URL of the bundle to remove.
          type: string
        collaborator:
          description: Bitly login of the collaborator to remove.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /contents:
    type: base
    get:
      description: Returns information about a bundle.
      queryParameters:
        bundle_link:
          description: The URL corresponding to the bundle to be returned.
          type: string
        expand_user:
          description: True or false - include extra user info in response.
          type: string
          required: false
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "",
                      "last_modified_ts": 1332177579,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        }
                      ],
                      "private": false,
                      "title": "Here is a Bundle of Links!"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /create:
    type: base
    get:
      description: Returns information about a bundle.
      queryParameters:
        private:
          description: |
            A value true or false designating the privacy setting of the bundle to be created.
          type: string
          default: false
        title:
          description: The title of the bundle to be created.
          type: string
        description:
          description: A description of the bundle to be created.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/3",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332185633,
                      "description": "",
                      "last_modified_ts": 1332185633,
                      "links": [],
                      "private": false,
                      "title": ""
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /edit:
    type: base
    get:
      description: Edit a bundle for the authenticated user.
      queryParameters:
        bundle_link:
          description: The URL corresponding to the bundle to be modified.
          type: string
        edit:
          description: |
            A field designating which properties (e.g., 'title', 'description') are
            to be edited, allowing for these fields to be updated with empty values.
          type: string
        title:
          description: A title for the specified bundle.
          type: string
        description:
          description: A description for the specified bundle.
          type: string
        private:
          description: |
            A true or false value representing whether or not the specified bundle
            should set to private.
          type: string
        preview:
          description: |
            A true or false value representing whether or not content previews should
            be shown for the specified bundle's links.
          type: string
        og_image:
          description: The URL to the bundle's cover image.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "Kittehs FTW",
                      "last_modified_ts": 1332185530,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        }
                      ],
                      "private": false,
                      "title": ""
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_add:
    type: base
    get:
      description: Edit a bundle for the authenticated user.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle to which the link will be added.
          type: string
        link:
          description: |
            the URL to be added to the specified bundle. (This can be a bitly short
            URL or a long URL. If it is a long URL, it will be automatically saved
            to the authenticated user's account.)
          type: string
          required: true
        title:
          description: The title to use for this link in this bundle.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": null,
                  "status_code": 500,
                  "status_txt": "LINK_ALREADY_IN_BUNDLE"
                }
  /link_comment_add:
    type: base
    get:
      description: Add a comment to bundle item.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle to which the link will be added.
          type: string
        link:
          description: |
            the URL to be added to the specified bundle. (This can be a bitly short
            URL or a long URL. If it is a long URL, it will be automatically saved
            to the authenticated user's account.)
          type: string
        comment:
          description: The comment to add.
          type: string
          maxLength: 512
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /link_comment_edit:
    type: base
    get:
      description: Edit a bundle for the authenticated user.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle in which the link will be edited.
          type: string
        link:
          description: The bitly link on which the comment exists.
          type: string
        comment_id:
          description: The id of the comment to edit.
          type: integer
        comment:
          description: The edited comment.
          type: string
          maxLength: 512
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /link_comment_remove:
    type: base
    get:
      description: |
        Remove a comment from a bundle item. Only the original commenter and the
        bundles owner may perform this action.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle in which the link will be edited.
          type: string
        link:
          description: The bitly link to be edited.
          type: string
        comment_id:
          description: The ID of the comment to be removed.
          type: integer
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /link_edit:
    type: base
    get:
      description: Edit the title for a link.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle in which the link will be edited.
          type: string
          required: true
        link:
          description: The bitly link to be edited.
          type: string
          required: true
        edit:
          description: |
            A field designating which properties (title, preview) are to be edited,
            allowing for these fields to be updated with empty values.
          type: string
        title:
          description: A title for the specified link.
          type: string
        preview:
          description: |
            A true or false value representing whether a content preview should be
            displayed for this item (overrides the per-bundle flag of the same name).
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "",
                      "last_modified_ts": 1332184258,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        },
                        {
                          "aggregate_link": "http://bit.ly/gHwqEE",
                          "description": "",
                          "display_order": 2,
                          "link": "http://bit.ly/wc5dQK",
                          "long_url": "http://icanhascheezburger.com/lolrus/",
                          "title": "I AM TEH LOLRUS"
                        }
                      ],
                      "private": false,
                      "title": "Here is a Bundle of Links!"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_remove:
    type: base
    get:
      description: Remove a link from a bitly bundle
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle from which the link will be removed.
          type: string
        link:
          description: The bitly link to be removed from this bundle.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "",
                      "last_modified_ts": 1332184840,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        }
                      ],
                      "private": false,
                      "title": "Here is a Bundle of Links!"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /link_reorder:
    type: base
    get:
      description: Change the position of a link in a bitly bundle.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle in which the link will be reordered.
          type: string
        link:
          description: The bitly link to be reordered in this bundle.
          type: string
        display_order:
          description: |
            The new display_order value to be assigned to the the specified link. (A
            value of -1 moves to end, 0 to the front, any other number moves it to
            that spot, bumping everythign else down.)
          type: integer
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "",
                      "last_modified_ts": 1332183044,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        },
                        {
                          "aggregate_link": "http://bit.ly/gHwqEE",
                          "description": "",
                          "display_order": 2,
                          "link": "http://bit.ly/wc5dQK",
                          "long_url": "http://icanhascheezburger.com/lolrus/",
                          "title": "The Story Of The Lolrus - Lolcats 'n' Funny Pictures of Cats - I Can Has Cheezburger?"
                        }
                      ],
                      "private": false,
                      "title": "Here is a Bundle of Links!"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /pending_collaborator_remove:
    type: base
    get:
      description: Removes a pending/invited collaborator from a bundle.
      queryParameters:
        bundle_link:
          description: The URL of the bundle.
          type: string
        collaborator:
          description: Bitly login or email address of the collaborator to remove.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
  /reorder:
    type: base
    get:
      description: Re-order the links in a bundle.
      queryParameters:
        bundle_link:
          description: |
            The URL corresponding to the bundle in which the link will be reordered.
          type: string
        link:
          description: |
            One ore more bitly links to be reordered.
            The link parameter should be repeated for each link to be reordered,
            and each link should be given in the order in which it should appear in the bundle.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_owner": {
                    		"description": "The bitly user who owns this bundle (the authenticated user on whose behalf the bundle was created).",
                    		"type": "string"
                    	},
                    	"created_ts": {
                    		"description": "A timestamp representing the time at which this bundle was created.",
                    		"type": "timestamp"
                    	},
                    	"description": {
                    		"description": "A description of this bundle.",
                    		"type": "string"
                    	},
                    	"bundle_link": {
                    		"description": "A URL pointing directly to this bundle.",
                    		"type": "string"
                    	},
                    	"last_modified_ts": {
                    		"description": "A timestamp representing the last time this bundle was modified.",
                    		"type": "timestamp"
                    	},
                    	"private": {
                    		"description": "A true/false value indicating whether this bundle is set to be private.",
                    		"type": "boolean"
                    	},
                    	"links": [
                    		{
                    			"description": "The links in the bundle.",
                    			"properties": {
                    				"aggregate_link": {
                    					"description": "The global bitly link for the specified long_url, which can be used to track aggregate stats across all matching bitly links.",
                    					"type": "string"
                    				},
                    				"link": {
                    					"description": "The bitly link for the specified long_url, unique to this user's account.",
                    					"type": "string"
                    				},
                    				"description": {
                    					"description": "A description of this link.",
                    					"type": "string"
                    				},
                    				"title": {
                    					"description": "The title of this link, automatically populated from the destination page title and editable with the /v3/bundle/link_edit endpoint.",
                    					"type": "string"
                    				},
                    				"long_url": {
                    					"description": "The destination long URL for this link.",
                    					"type": "string"
                    				},
                    				"display_order": {
                    					"description": "The order in which this link will display, starting with 0 for the link to be displayed first.",
                    					"type": "integer"
                    				}
                    			}
                    		}
                    	],
                    	"type": "array"
                    }
                }
              example: |
                {
                  "data": {
                    "bundle": {
                      "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                      "bundle_owner": "bitlyapioauthdemo",
                      "created_ts": 1332175561,
                      "description": "",
                      "last_modified_ts": 1332183044,
                      "links": [
                        {
                          "aggregate_link": "http://bit.ly/xx2UTg",
                          "description": "Animated GIFs 4 Lyfe!",
                          "display_order": 0,
                          "link": "http://bit.ly/FWfWFP",
                          "long_url": "http://bukk.it/asdf.gif",
                          "title": "AAAAHHHH"
                        },
                        {
                          "aggregate_link": "http://bit.ly/K49Ze",
                          "description": "O LOOK IT'S KEYBOARD CAT",
                          "display_order": 1,
                          "link": "http://bit.ly/w8gWsd",
                          "long_url": "http://www.youtube.com/watch?v=J---aiyznGQ",
                          "title": "Keyboard Cat!"
                        },
                        {
                          "aggregate_link": "http://bit.ly/gHwqEE",
                          "description": "",
                          "display_order": 2,
                          "link": "http://bit.ly/wc5dQK",
                          "long_url": "http://icanhascheezburger.com/lolrus/",
                          "title": "The Story Of The Lolrus - Lolcats 'n' Funny Pictures of Cats - I Can Has Cheezburger?"
                        }
                      ],
                      "private": false,
                      "title": "Here is a Bundle of Links!"
                    }
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
  /view_count:
    type: base
    get:
      description: Get the number of views for a bundle.
      queryParameters:
        bundle_link:
          description: The URL of the bundle.
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-03/schema",
                    "type": "object",
                    "properties": {
                    	"bundle_link": {
                    		"description": "An echo of the input bundle_link parameter.",
                    		"type": "string"
                    	},
                    	"view_count": {
                    		"description": "The number of times the bundle has been viewed.",
                    		"type": "integer"
                    	}
                    }
                }
  /bundle_history:
    type: base
    get:
      description: Returns all bundles this user has access to (public + private + collaborator).
      queryParameters:
        expand_user:
          description: True or false - include extra user info in response.
          type: string
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": {
                    "bundles": [
                      {
                        "aggregate_link": "http://bit.ly/ziAHJz",
                        "bundle_link": "http://bitly.com/bundles/bitlyapioauthdemo/1",
                        "bundle_owner": "bitlyapioauthdemo",
                        "created_ts": 1332175561,
                        "description": "",
                        "last_modified_ts": 1332177579,
                        "private": false,
                        "title": "Here is a Bundle of Links!",
                        "user_link": "http://bit.ly/xhGb5J"
                      }
                    ]
                  },
                  "status_code": 200,
                  "status_txt": "OK"
                }
/bitly_pro_domain:
  type: base
  get:
    description: |
      Query whether a given domain is a valid bitly pro domain. Keep in mind that
      bitly custom short domains are restricted to less than 15 characters in
      length.
    queryParameters:
      domain:
        description: |
          A short domain. ie: nyti.ms.
        type: string
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "type": "object",
                  "properties": {
                  	"bitly_pro_domain": {
                  		"description": "0 or 1 designating whether this is a current bitly domain.",
                  		"type": "boolean"
                  	},
                  	"domain": {
                  		"description": "An echo back of the request parameter.",
                  		"type": "string"
                  	}
                  }
              }
            example: |
              {
                "data": {
                  "bitly_pro_domain": true,
                  "domain": "1.usa.gov"
                },
                "status_code": 200,
                "status_txt": "OK"
              }

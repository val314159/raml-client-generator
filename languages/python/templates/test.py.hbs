import os,json
import requests
import httplib,urllib

class LL_API:
  def __init__(self,auth_query={},access_token=None,
    # requests stuff
    url_prefix=None,
    # end requests stuff
    # httplib stuff
    host=None,
    port=None,
    path_prefix=None,
    use_ssl=True,
    # end httplib stuff
  ):
    self.path_prefix=path_prefix
    self.host=host
    self.port=port
    self.use_ssl=use_ssl
    if url_prefix is None:
      proto='http' + ('s' if use_ssl else '')
      url_prefix='%s://%s:%s%s' % (proto,host,port,path_prefix)
      pass
    self.url_prefix = url_prefix
    self.auth_query=dict(auth_query)
    if access_token:
      self.auth_query['access_token'] = access_token
      pass
    # httplib stuff
    self.host    = host
    self.port    = port
    self.use_ssl = use_ssl
    # end httplib stuff
    pass
  def connect(self):
    # httplib stuff
    if self.use_ssl:
      httplib.HTTPSConnection(self.host)
    else:
      httplib.HTTPConnection( self.host)
      pass
    # end httplib stuff
    pass
  #each allMethods
  {{#each allMethods}}{{getUriList resource}}
  def rpc{{flatPath resource}}_{{method}}(self,
    {{#each resource.uriList}}{{displayName}}=None,{{/each}}#uri
    {{#each queryParameters}}{{@key}}=None,{{/each}}#query
    {{#each body}}{{#each formParameters}}{{@key}}=None,{{/each}}{{/each}}#form
    ):
    ###
    path='{{fullPath resource}}'
    uri=path
{{#resource.uriList}}
    uri=uri.replace('{%s}'%'{{displayName}}',{{displayName}})
{{/resource.uriList}}
    query={}
    [ query.__setitem__(k,v) for k,v in self.auth_query.iteritems() if False ]
{{#each queryParameters}}
    if {{@key}} is not None:
      query['{{@key}}']={{@key}}
      pass
{{/each}}
    qstr='&'.join([(str(k)+'='+str(v)) for k,v in query.iteritems()])
    if qstr: qstr='?'+qstr
    if '{{method}}' in ('post','put'):
      headers = {"Content-type": "application/x-www-form-urlencoded",
                 "Accept": "text/plain"}
      form={}
{{#each body}}{{#each formParameters}}
      if {{@key}} is not None:
        form['{{@key}}']={{@key}}
        pass
{{/each}}{{/each}}
      # httplib stuff
      body = urllib.urlencode(form)
      # end httplib stuff
    else:
      headers = {}
      form = None
      # httplib stuff
      body = None
      # end httplib stuff
      pass
    if 1:
      # requests stuff
      return requests.{{method}}(url+qstr,data=body,headers=headers)
      # end requests stuff
    else:
      # httplib stuff
      r = self.conn.request('{{method}}'.upper(),url+qstr, body, headers)
      r = c.getresponse()
      return r
      # end httplib stuff
      pass
  {{/each}}
  pass # end class LL_API
#EOF
